# Generated by Django 5.2.7 on 2025-10-07 19:36

import django.contrib.postgres.indexes
import django.db.models.deletion
import pgvector.django.indexes
import pgvector.django.vector
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Pattern',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity_id', models.IntegerField(help_text='Entity identifier')),
                ('version', models.CharField(help_text='Version identifier for the pattern', max_length=32)),
                ('text', models.TextField(help_text='Log text content (up to ~100 lines)')),
                ('label', models.CharField(blank=True, help_text='User-defined label for grouping patterns', max_length=64, null=True)),
            ],
            options={
                'db_table': 'patterns',
            },
        ),
        migrations.CreateModel(
            name='JinaEmbedding',
            fields=[
                ('pattern', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='jina_embedding', serialize=False, to='fuz.pattern')),
                ('vector', pgvector.django.vector.VectorField(dimensions=768)),
            ],
            options={
                'db_table': 'jina_embeddings',
            },
        ),
        migrations.CreateModel(
            name='MiniLMEmbedding',
            fields=[
                ('pattern', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='minilm_embedding', serialize=False, to='fuz.pattern')),
                ('vector', pgvector.django.vector.VectorField(dimensions=384)),
            ],
            options={
                'db_table': 'minilm_embeddings',
            },
        ),
        migrations.CreateModel(
            name='MPNetEmbedding',
            fields=[
                ('pattern', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='mpnet_embedding', serialize=False, to='fuz.pattern')),
                ('vector', pgvector.django.vector.VectorField(dimensions=768)),
            ],
            options={
                'db_table': 'mpnet_embeddings',
            },
        ),
        migrations.AddIndex(
            model_name='pattern',
            index=django.contrib.postgres.indexes.GinIndex(fields=['text'], name='patterns_text_trgm_idx', opclasses=['gin_trgm_ops']),
        ),
        migrations.AddIndex(
            model_name='pattern',
            index=models.Index(fields=['version', 'entity_id'], name='patterns_version_entity_idx'),
        ),
        migrations.AddConstraint(
            model_name='pattern',
            constraint=models.UniqueConstraint(fields=('version', 'entity_id'), name='unique_version_entity'),
        ),
        migrations.AddIndex(
            model_name='jinaembedding',
            index=pgvector.django.indexes.HnswIndex(ef_construction=64, fields=['vector'], m=16, name='jina_vector_idx', opclasses=['vector_cosine_ops']),
        ),
        migrations.AddIndex(
            model_name='minilmembedding',
            index=pgvector.django.indexes.HnswIndex(ef_construction=64, fields=['vector'], m=16, name='minilm_vector_idx', opclasses=['vector_cosine_ops']),
        ),
        migrations.AddIndex(
            model_name='mpnetembedding',
            index=pgvector.django.indexes.HnswIndex(ef_construction=64, fields=['vector'], m=16, name='mpnet_vector_idx', opclasses=['vector_cosine_ops']),
        ),
    ]
